//
//  MapViewController.swift
//  yaaulyanenkovPW7
//
//  Created by Ярослав Ульяненков on 17.01.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import YandexMapsMobile

protocol MapDisplayLogic: AnyObject
{
    func displaySomething(viewModel: Map.Something.ViewModel)
}

class MapViewController: UIViewController, MapDisplayLogic
{
    var interactor: MapBusinessLogic?
    var router: (NSObjectProtocol & MapRoutingLogic & MapDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
        configureUI()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
        configureUI()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = MapInteractor()
        let presenter = MapPresenter()
        let router = MapRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    private let mapView: YMKMapView = {
        let mapView = YMKMapView()
        mapView.clearsContextBeforeDrawing = true
        mapView.translatesAutoresizingMaskIntoConstraints = false
        return mapView
    }()
    
    lazy var map: YMKMap = {
        return mapView.mapWindow.map
    }()
    
    lazy var mapWindow: YMKMapWindow = {
        return mapView.mapWindow
    }()
    
    var mapObkjects: YMKMapObjectCollection {
        return map.mapObjects
    }
    
    var center: YMKPoint {
        return map.cameraPosition.target
    }
    
    private func configureUI() {
        
        mapView.frame = view.bounds
        view.addSubview(mapView)
        let TARGET_LOCATION = YMKPoint(latitude: 59.945933, longitude: 30.320045)
        map.move(with:YMKCameraPosition(target: TARGET_LOCATION, zoom: 15, azimuth: 0, tilt: 0),
                 animationType: YMKAnimation(type: YMKAnimationType.smooth, duration: 5),
                 cameraCallback: nil)
        
        
    }
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doSomething()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething()
    {
        let request = Map.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: Map.Something.ViewModel)
    {
        //nameTextField.text = viewModel.name
    }
}
